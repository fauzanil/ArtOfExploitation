
;; Function main (main, funcdef_no=2, decl_uid=2621, cgraph_uid=2, symbol_order=2)

main (int argc, char * * argv)
{
  char * ptr;
  int D.2639;
  char * D.2638;
  char * * D.2637;
  unsigned int D.2636;
  unsigned int D.2635;
  unsigned int D.2634;
  char * D.2633;
  char * * D.2632;
  unsigned int D.2631;
  char * D.2630;
  char * D.2629;
  char * * D.2628;
  char * D.2627;
  char * * _3;
  char * _5;
  char * _8;
  unsigned int _9;
  char * * _10;
  char * _11;
  unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  char * * _16;
  char * _17;
  int _19;
  char * _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (argc_1(D) <= 2)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _20 = *argv_2(D);
  printf ("Usage: %s <environment var> <target program name>\n", _20);
  exit (0);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _3 = argv_2(D) + 4;
  _5 = *_3;
  ptr_7 = getenv (_5);
  _8 = *argv_2(D);
  _9 = strlen (_8);
  _10 = argv_2(D) + 8;
  _11 = *_10;
  _12 = strlen (_11);
  _13 = _9 - _12;
  _14 = _13 * 2;
  ptr_15 = ptr_7 + _14;
  _16 = argv_2(D) + 4;
  _17 = *_16;
  printf ("%s will be at %p\n", _17, ptr_15);
  _19 = 0;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _19;
;;    succ:       EXIT

}



Partition map 

Partition 1 (argc_1(D) - 1 )
Partition 2 (argv_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 5 (_5 - 5 )
Partition 7 (ptr_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (ptr_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )


Partition map 

Partition 0 (argc_1(D) - 1 )
Partition 1 (argv_2(D) - 2 )
Partition 2 (ptr_7 - 7 )
Partition 3 (ptr_15 - 15 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) ptr_7 <-> ptr_15

Partition map 

Partition 0 (argc_1(D) - 1 )
Partition 1 (argv_2(D) - 2 )
Partition 2 (ptr_7 - 7 )
Partition 3 (ptr_15 - 15 )

Coalesce list: (7)ptr_7 & (15)ptr_15 [map: 2, 3] : Success -> 2
After Coalescing:

Partition map 

Partition 0 (argc_1(D) - 1 )
Partition 1 (argv_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_5 - 5 )
Partition 4 (ptr_7 - 7 15 )
Partition 5 (_8 - 8 )
Partition 6 (_9 - 9 )
Partition 7 (_10 - 10 )
Partition 8 (_11 - 11 )
Partition 9 (_12 - 12 )
Partition 10 (_13 - 13 )
Partition 11 (_14 - 14 )
Partition 12 (_16 - 16 )
Partition 13 (_17 - 17 )
Partition 14 (_19 - 19 )
Partition 15 (_20 - 20 )

main (int argc, char * * argv)
{
  char * ptr;
  int D.2639;
  char * D.2638;
  char * * D.2637;
  unsigned int D.2636;
  unsigned int D.2635;
  unsigned int D.2634;
  char * D.2633;
  char * * D.2632;
  unsigned int D.2631;
  char * D.2630;
  char * D.2629;
  char * * D.2628;
  char * D.2627;
  char * * _3;
  char * _5;
  char * _8;
  unsigned int _9;
  char * * _10;
  char * _11;
  unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  char * * _16;
  char * _17;
  int _19;
  char * _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (argc_1(D) <= 2)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _20 = *argv_2(D);
  printf ("Usage: %s <environment var> <target program name>\n", _20);
  exit (0);
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _3 = argv_2(D) + 4;
  _5 = *_3;
  ptr_7 = getenv (_5);
  _8 = *argv_2(D);
  _9 = strlen (_8);
  _10 = argv_2(D) + 8;
  _11 = *_10;
  _12 = strlen (_11);
  _13 = _9 - _12;
  _14 = _13 * 2;
  ptr_15 = ptr_7 + _14;
  _16 = argv_2(D) + 4;
  _17 = *_16;
  printf ("%s will be at %p\n", _17, ptr_15);
  _19 = 0;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _19;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (argc_1(D) <= 2)

(insn 5 4 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 2 [0x2]))) getenv.c:6 -1
     (nil))

(jump_insn 6 5 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) getenv.c:6 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _20 = *argv_2(D);

(insn 8 7 9 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:7 -1
     (nil))

(insn 9 8 0 (set (reg/f:SI 99 [ D.2643 ])
        (mem/f:SI (reg/f:SI 101) [0 *argv_2(D)+0 S4 A32])) getenv.c:7 -1
     (nil))

;; printf ("Usage: %s <environment var> <target program name>\n", _20);

(insn 10 9 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:7 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 11 10 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 99 [ D.2643 ])) getenv.c:7 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 12 11 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7ffff6846b40 *.LC0>)) getenv.c:7 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 13 12 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x7ffff670cca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) getenv.c:7 -1
     (nil)
    (nil))

(insn 14 13 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:7 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; exit (0);

(insn 15 14 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:8 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 16 15 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) getenv.c:8 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 17 16 18 (call (mem:QI (symbol_ref:SI ("exit") [flags 0x41]  <function_decl 0x7ffff6724000 exit>) [0 __builtin_exit S1 A8])
        (const_int 16 [0x10])) getenv.c:8 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))

(barrier 18 17 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 19 18 20 2 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; _3 = argv_2(D) + 4;

(insn 21 20 22 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:10 -1
     (nil))

(insn 22 21 0 (parallel [
            (set (reg/f:SI 87 [ D.2642 ])
                (plus:SI (reg/f:SI 102)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:10 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 argv+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))

;; _5 = *_3;

(insn 23 22 0 (set (reg/f:SI 88 [ D.2643 ])
        (mem/f:SI (reg/f:SI 87 [ D.2642 ]) [0 *_3+0 S4 A32])) getenv.c:10 -1
     (nil))

;; ptr_7 = getenv (_5);

(insn 24 23 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:10 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 25 24 26 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.2643 ])) getenv.c:10 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 26 25 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getenv") [flags 0x41]  <function_decl 0x7ffff6815360 getenv>) [0 getenv S1 A8])
            (const_int 16 [0x10]))) getenv.c:10 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 27 26 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:10 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

(insn 28 27 29 (set (reg:SI 103)
        (reg:SI 0 ax)) getenv.c:10 -1
     (nil))

(insn 29 28 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 ptr+0 S4 A32])
        (reg:SI 103)) getenv.c:10 -1
     (nil))

;; _8 = *argv_2(D);

(insn 30 29 31 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:11 -1
     (nil))

(insn 31 30 0 (set (reg/f:SI 89 [ D.2643 ])
        (mem/f:SI (reg/f:SI 104) [0 *argv_2(D)+0 S4 A32])) getenv.c:11 -1
     (nil))

;; _9 = strlen (_8);

(insn 32 31 33 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 33 32 34 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 89 [ D.2643 ])) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn/i 34 33 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x7ffff6706948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 16 [0x10]))) getenv.c:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 35 34 36 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

(insn 36 35 0 (set (reg:SI 90 [ D.2644 ])
        (reg:SI 0 ax)) getenv.c:11 -1
     (nil))

;; _10 = argv_2(D) + 8;

(insn 37 36 38 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:11 -1
     (nil))

(insn 38 37 0 (parallel [
            (set (reg/f:SI 91 [ D.2642 ])
                (plus:SI (reg/f:SI 105)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 argv+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; _11 = *_10;

(insn 39 38 0 (set (reg/f:SI 92 [ D.2643 ])
        (mem/f:SI (reg/f:SI 91 [ D.2642 ]) [0 *_10+0 S4 A32])) getenv.c:11 -1
     (nil))

;; _12 = strlen (_11);

(insn 40 39 41 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 41 40 42 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 92 [ D.2643 ])) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn/i 42 41 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x7ffff6706948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 16 [0x10]))) getenv.c:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 43 42 44 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

(insn 44 43 0 (set (reg:SI 93 [ D.2644 ])
        (reg:SI 0 ax)) getenv.c:11 -1
     (nil))

;; _13 = _9 - _12;

(insn 45 44 0 (parallel [
            (set (reg:SI 94 [ D.2644 ])
                (minus:SI (reg:SI 90 [ D.2644 ])
                    (reg:SI 93 [ D.2644 ])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (nil))

;; _14 = _13 * 2;

(insn 46 45 0 (parallel [
            (set (reg:SI 95 [ D.2644 ])
                (ashift:SI (reg:SI 94 [ D.2644 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (nil))

;; ptr_15 = ptr_7 + _14;

(insn 47 46 0 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 ptr+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 ptr+0 S4 A32])
                    (reg:SI 95 [ D.2644 ])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (nil))

;; _16 = argv_2(D) + 4;

(insn 48 47 49 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:12 -1
     (nil))

(insn 49 48 0 (parallel [
            (set (reg/f:SI 96 [ D.2642 ])
                (plus:SI (reg/f:SI 106)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:12 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 argv+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))

;; _17 = *_16;

(insn 50 49 0 (set (reg/f:SI 97 [ D.2643 ])
        (mem/f:SI (reg/f:SI 96 [ D.2642 ]) [0 *_16+0 S4 A32])) getenv.c:12 -1
     (nil))

;; printf ("%s will be at %p\n", _17, ptr_15);

(insn 51 50 52 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))

(insn 52 51 53 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 ptr+0 S4 A32])) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 53 52 54 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 97 [ D.2643 ])) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 54 53 55 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7ffff6846bd0 *.LC1>)) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 55 54 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x7ffff670cca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) getenv.c:12 -1
     (nil)
    (nil))

(insn 56 55 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _19 = 0;

(insn 57 56 0 (set (reg:SI 98 [ D.2645 ])
        (const_int 0 [0])) <built-in>:0 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2>:

(code_label 58 57 59 3 "" [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; return _19;

(insn 60 59 61 (set (reg:SI 100 [ <retval> ])
        (reg:SI 98 [ D.2645 ])) <built-in>:0 -1
     (nil))

(jump_insn 61 60 62 (set (pc)
        (label_ref 0)) <built-in>:0 -1
     (nil))

(barrier 62 61 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 61.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 67 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 67 3 2 2 (set (reg:SI 108)
        (reg:SI 2 cx)) -1
     (expr_list:REG_CFA_SET_VDRAP (reg:SI 108)
        (nil)))
(note 2 67 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 argc+0 S4 A32])
            (const_int 2 [0x2]))) getenv.c:6 -1
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) getenv.c:6 -1
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 7 6 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 4 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:7 -1
     (nil))
(insn 9 8 10 4 (set (reg/f:SI 99 [ D.2643 ])
        (mem/f:SI (reg/f:SI 101) [0 *argv_2(D)+0 S4 A32])) getenv.c:7 -1
     (nil))
(insn 10 9 11 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:7 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 11 10 12 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 99 [ D.2643 ])) getenv.c:7 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 13 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7ffff6846b40 *.LC0>)) getenv.c:7 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 13 12 14 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x7ffff670cca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) getenv.c:7 -1
     (nil)
    (nil))
(insn 14 13 15 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:7 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 15 14 16 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:8 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 16 15 17 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) getenv.c:8 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 17 16 18 4 (call (mem:QI (symbol_ref:SI ("exit") [flags 0x41]  <function_decl 0x7ffff6724000 exit>) [0 __builtin_exit S1 A8])
        (const_int 16 [0x10])) getenv.c:8 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 18 17 19)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 19 18 20 5 2 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:10 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg/f:SI 87 [ D.2642 ])
                (plus:SI (reg/f:SI 102)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:10 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 argv+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 23 22 24 5 (set (reg/f:SI 88 [ D.2643 ])
        (mem/f:SI (reg/f:SI 87 [ D.2642 ]) [0 *_3+0 S4 A32])) getenv.c:10 -1
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:10 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 25 24 26 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.2643 ])) getenv.c:10 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 25 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getenv") [flags 0x41]  <function_decl 0x7ffff6815360 getenv>) [0 getenv S1 A8])
            (const_int 16 [0x10]))) getenv.c:10 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:10 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 28 27 29 5 (set (reg:SI 103)
        (reg:SI 0 ax)) getenv.c:10 -1
     (nil))
(insn 29 28 30 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 ptr+0 S4 A32])
        (reg:SI 103)) getenv.c:10 -1
     (nil))
(insn 30 29 31 5 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:11 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:SI 89 [ D.2643 ])
        (mem/f:SI (reg/f:SI 104) [0 *argv_2(D)+0 S4 A32])) getenv.c:11 -1
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 33 32 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 89 [ D.2643 ])) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn/i 34 33 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x7ffff6706948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 16 [0x10]))) getenv.c:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 36 35 37 5 (set (reg:SI 90 [ D.2644 ])
        (reg:SI 0 ax)) getenv.c:11 -1
     (nil))
(insn 37 36 38 5 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:11 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg/f:SI 91 [ D.2642 ])
                (plus:SI (reg/f:SI 105)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 argv+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 39 38 40 5 (set (reg/f:SI 92 [ D.2643 ])
        (mem/f:SI (reg/f:SI 91 [ D.2642 ]) [0 *_10+0 S4 A32])) getenv.c:11 -1
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 41 40 42 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 92 [ D.2643 ])) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn/i 42 41 43 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x7ffff6706948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 16 [0x10]))) getenv.c:11 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 43 42 44 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 43 45 5 (set (reg:SI 93 [ D.2644 ])
        (reg:SI 0 ax)) getenv.c:11 -1
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:SI 94 [ D.2644 ])
                (minus:SI (reg:SI 90 [ D.2644 ])
                    (reg:SI 93 [ D.2644 ])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:SI 95 [ D.2644 ])
                (ashift:SI (reg:SI 94 [ D.2644 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (nil))
(insn 47 46 48 5 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 ptr+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 ptr+0 S4 A32])
                    (reg:SI 95 [ D.2644 ])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:11 -1
     (nil))
(insn 48 47 49 5 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 argv+0 S4 A32])) getenv.c:12 -1
     (nil))
(insn 49 48 50 5 (parallel [
            (set (reg/f:SI 96 [ D.2642 ])
                (plus:SI (reg/f:SI 106)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:12 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 argv+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 50 49 51 5 (set (reg/f:SI 97 [ D.2643 ])
        (mem/f:SI (reg/f:SI 96 [ D.2642 ]) [0 *_16+0 S4 A32])) getenv.c:12 -1
     (nil))
(insn 51 50 52 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 52 51 53 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 ptr+0 S4 A32])) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 53 52 54 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 97 [ D.2643 ])) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 54 53 55 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7ffff6846bd0 *.LC1>)) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 55 54 56 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41]  <function_decl 0x7ffff670cca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) getenv.c:12 -1
     (nil)
    (nil))
(insn 56 55 57 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) getenv.c:12 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 57 56 60 5 (set (reg:SI 98 [ D.2645 ])
        (const_int 0 [0])) <built-in>:0 -1
     (nil))
(insn 60 57 64 5 (set (reg:SI 100 [ <retval> ])
        (reg:SI 98 [ D.2645 ])) <built-in>:0 -1
     (nil))
(insn 64 60 65 5 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) getenv.c:13 -1
     (nil))
(insn 65 64 0 5 (use (reg/i:SI 0 ax)) getenv.c:13 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

